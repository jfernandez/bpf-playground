# Explicitly set the compiler to clang
CC := clang

# Compiler flags for both BPF and userspace programs
CFLAGS := -O2 -Wall -g

LDFLAGS := -lbpf

# Source files are any .bpf.c files
BPF_SRCS := $(wildcard *.bpf.c)

# Object files are the corresponding .o files for BPF programs
BPF_OBJS := $(BPF_SRCS:.bpf.c=.o)

# Skeleton files generated by bpftool
SKELS := $(BPF_SRCS:.bpf.c=_skel.h)

# Userspace program sources and their corresponding executables
USR_SRCS := $(filter-out $(BPF_SRCS), $(wildcard *.c))
USR_OUTS := $(USR_SRCS:.c=)

# Default target
all: $(USR_OUTS)

# Ensure BPF objects and skeletons are built before userspace programs
$(USR_OUTS): $(BPF_OBJS) $(SKELS)

# Rule to compile userspace programs, depends explicitly on skeletons
%: %.c
	$(CC) $(CFLAGS) $< -o $@ $(LDFLAGS)

# Pattern rule for compiling .bpf.c to .o
%.o: %.bpf.c
	$(CC) $(CFLAGS) -target bpf -c $< -o $@

# Pattern rule for generating BPF skeletons using bpftool
%_skel.h: %.o
	bpftool gen skeleton $< > $@

# Clean target
clean:
	rm -f $(BPF_OBJS) $(SKELS) $(USR_OUTS)
